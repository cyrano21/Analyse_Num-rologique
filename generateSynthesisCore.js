import { generatePersonalizedText } from './utils/huggingface.js';
import fs from 'fs/promises';
import path from 'path';

async function generatePersonalizedSynthesis() {
  const formData = {
    firstName: 'Jean',
    lastName: 'Dupont'
  };

  const synthesisPrompt = `
G√©n√®re une synth√®se personnelle et approfondie pour ${formData.firstName} ${formData.lastName}, 
en explorant les dimensions suivantes avec une approche bienveillante et perspicace :

1. Parcours personnel et √©volution int√©rieure
- Quels sont les moments cl√©s qui ont marqu√© son d√©veloppement ?
- Comment ses exp√©riences pass√©es ont-elles fa√ßonn√© sa vision actuelle ?

2. Forces et potentiels cach√©s
- Quelles sont ses qualit√©s intrins√®ques les plus remarquables ?
- Quels talents ou capacit√©s m√©ritent d'√™tre davantage d√©velopp√©s ?

3. D√©fis et opportunit√©s de croissance
- Quels sont les principaux obstacles √† son √©panouissement ?
- Comment peut-il transformer ses d√©fis en opportunit√©s de d√©veloppement ?

4. Conseils pour l'√©panouissement personnel
- Quelles pratiques ou r√©flexions pourraient l'aider √† progresser ?
- Comment cultiver sa dimension spirituelle et personnelle ?

Crit√®res pour la synth√®se :
- √ätre profond et authentique
- Utiliser un langage encourageant et constructif
- Proposer des perspectives nouvelles
- √âviter les clich√©s et les g√©n√©ralit√©s
- Faire entre 300 et 500 mots
- Structurer le texte en paragraphes clairs et fluides
`;

  try {
    process.stderr.write('üåü G√©n√©ration de la synth√®se personnalis√©e...\n');
    process.stderr.write(`üìù Longueur du prompt: ${synthesisPrompt.length} caract√®res\n`);

    const personalizedSynthesis = await generatePersonalizedText(synthesisPrompt, {
      temperature: 0.7,
      maxTokens: 500,
      model: 'mistralai/Mixtral-8x7B-Instruct-v0.1'  // Mod√®le Mixtral
    });

    // Affichage manuel
    const separator = '='.repeat(80);
    process.stdout.write(`\n${separator}\n`);
    process.stdout.write(personalizedSynthesis);
    process.stdout.write(`\n${separator}\n`);

    process.stderr.write('\nüìä D√©tails de la synth√®se:\n');
    process.stderr.write(`Longueur: ${personalizedSynthesis.length} caract√®res\n`);

    // √âcrire la synth√®se dans un fichier
    const outputDir = path.join(process.cwd(), 'output');
    await fs.mkdir(outputDir, { recursive: true });
    const outputFile = path.join(outputDir, 'personalizedSynthesis.txt');
    await fs.writeFile(outputFile, personalizedSynthesis, 'utf-8');
    
    process.stderr.write(`üìÅ Synth√®se enregistr√©e dans : ${outputFile}\n`);

  } catch (error) {
    process.stderr.write(`‚ùå Erreur lors de la g√©n√©ration de la synth√®se: ${error}\n`);
    process.exit(1);
  }
}

generatePersonalizedSynthesis();
